[{"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\index.js":"1","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\serviceWorker.js":"2","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\context\\LayoutContext.js":"3","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\App.js":"4","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\context\\UserContext.js":"5","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\themes\\index.js":"6","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\themes\\default.js":"7","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Layout\\Layout.js":"8","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\error\\Error.js":"9","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\login\\Login.js":"10","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\charts\\Charts.js":"11","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\PageTitle\\PageTitle.js":"12","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\charts\\components\\ApexHeatmap.js":"13","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\charts\\components\\ApexLineChart.js":"14","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\PageTitle\\styles.js":"15","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Widget\\Widget.js":"16","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\login\\styles.js":"17","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\error\\styles.js":"18","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Wrappers\\Wrappers.js":"19","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Layout\\styles.js":"20","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Widget\\styles.js":"21","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\tables\\Tables.js":"22","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\maps\\Maps.js":"23","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\typography\\Typography.js":"24","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\notifications\\Notifications.js":"25","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\Dashboard.js":"26","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Sidebar\\Sidebar.js":"27","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Header\\Header.js":"28","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\maps\\styles.js":"29","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\notifications\\styles.js":"30","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Sidebar\\components\\Dot.js":"31","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\components\\Table\\Table.js":"32","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js":"33","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Header\\styles.js":"34","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Sidebar\\styles.js":"35","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\mock.js":"36","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\styles.js":"37","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js":"38","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Notification\\Notification.js":"39","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\UserAvatar\\UserAvatar.js":"40","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\icons\\Icons.js":"41","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\components\\BigStat\\styles.js":"42","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js":"43","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Notification\\styles.js":"44","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\icons\\styles.js":"45","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\UserAvatar\\styles.js":"46","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\typography\\styles.js":"47","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\charts\\components\\temperatureChart.js":"48"},{"size":869,"mtime":1633262820153,"results":"49","hashOfConfig":"50"},{"size":4948,"mtime":1633262820174,"results":"51","hashOfConfig":"50"},{"size":1392,"mtime":1633262820903,"results":"52","hashOfConfig":"50"},{"size":1711,"mtime":1633262820200,"results":"53","hashOfConfig":"50"},{"size":1977,"mtime":1633262820925,"results":"54","hashOfConfig":"50"},{"size":502,"mtime":1633262821853,"results":"55","hashOfConfig":"50"},{"size":2987,"mtime":1633262821834,"results":"56","hashOfConfig":"50"},{"size":4427,"mtime":1633262820370,"results":"57","hashOfConfig":"50"},{"size":1571,"mtime":1633262821248,"results":"58","hashOfConfig":"50"},{"size":8886,"mtime":1633262821393,"results":"59","hashOfConfig":"50"},{"size":6912,"mtime":1633272354246,"results":"60","hashOfConfig":"50"},{"size":427,"mtime":1633262820494,"results":"61","hashOfConfig":"50"},{"size":1794,"mtime":1633262821024,"results":"62","hashOfConfig":"50"},{"size":1328,"mtime":1633272274044,"results":"63","hashOfConfig":"50"},{"size":462,"mtime":1633262820526,"results":"64","hashOfConfig":"50"},{"size":2485,"mtime":1633262820783,"results":"65","hashOfConfig":"50"},{"size":3133,"mtime":1633262821440,"results":"66","hashOfConfig":"50"},{"size":1334,"mtime":1633262821293,"results":"67","hashOfConfig":"50"},{"size":3790,"mtime":1633262820866,"results":"68","hashOfConfig":"50"},{"size":680,"mtime":1633262820407,"results":"69","hashOfConfig":"50"},{"size":969,"mtime":1633262820832,"results":"70","hashOfConfig":"50"},{"size":2082,"mtime":1633262821734,"results":"71","hashOfConfig":"50"},{"size":971,"mtime":1633262821469,"results":"72","hashOfConfig":"50"},{"size":4506,"mtime":1633262821779,"results":"73","hashOfConfig":"50"},{"size":13470,"mtime":1633262821564,"results":"74","hashOfConfig":"50"},{"size":15666,"mtime":1633277782660,"results":"75","hashOfConfig":"50"},{"size":4244,"mtime":1633262820554,"results":"76","hashOfConfig":"50"},{"size":10088,"mtime":1633276856987,"results":"77","hashOfConfig":"50"},{"size":171,"mtime":1633262821504,"results":"78","hashOfConfig":"50"},{"size":1858,"mtime":1633262821702,"results":"79","hashOfConfig":"50"},{"size":862,"mtime":1633262820637,"results":"80","hashOfConfig":"50"},{"size":1274,"mtime":1633262821214,"results":"81","hashOfConfig":"50"},{"size":4039,"mtime":1633262821165,"results":"82","hashOfConfig":"50"},{"size":3868,"mtime":1633262820293,"results":"83","hashOfConfig":"50"},{"size":1304,"mtime":1633262820609,"results":"84","hashOfConfig":"50"},{"size":4105,"mtime":1633262821091,"results":"85","hashOfConfig":"50"},{"size":2870,"mtime":1633262821122,"results":"86","hashOfConfig":"50"},{"size":4411,"mtime":1633262820668,"results":"87","hashOfConfig":"50"},{"size":3296,"mtime":1633262820432,"results":"88","hashOfConfig":"50"},{"size":593,"mtime":1633262820721,"results":"89","hashOfConfig":"50"},{"size":377833,"mtime":1633262821332,"results":"90","hashOfConfig":"50"},{"size":1027,"mtime":1633262821184,"results":"91","hashOfConfig":"50"},{"size":1412,"mtime":1633262820690,"results":"92","hashOfConfig":"50"},{"size":993,"mtime":1633262820469,"results":"93","hashOfConfig":"50"},{"size":780,"mtime":1633262821365,"results":"94","hashOfConfig":"50"},{"size":276,"mtime":1633262820755,"results":"95","hashOfConfig":"50"},{"size":421,"mtime":1636956668686,"results":"96","hashOfConfig":"50"},{"size":3412,"mtime":1633272713881,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"1serg7x",{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"100"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"136","messages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"100"},{"filePath":"153","messages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"171","messages":"172","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"175","messages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"179","messages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"193","messages":"194","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"100"},"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\index.js",[],["198","199"],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\serviceWorker.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\context\\LayoutContext.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\App.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\context\\UserContext.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\themes\\index.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\themes\\default.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Layout\\Layout.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\error\\Error.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\login\\Login.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\charts\\Charts.js",["200","201","202","203","204"],"import React, { useState } from \"react\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport {\n  CartesianGrid,\n  Legend,\n  Line,\n  LineChart,\n  Pie,\n  PieChart,\n  ResponsiveContainer,\n  Sector,\n  Tooltip,\n  XAxis,\n  YAxis,\n} from \"recharts\";\n\n// components\nimport Widget from \"../../components/Widget/Widget\";\nimport ApexLineChart from \"./components/ApexLineChart\";\nimport ApexHeatmap from \"./components/ApexHeatmap\";\nimport PageTitle from \"../../components/PageTitle/PageTitle\";\nimport TemperatureChart from \"./components/temperatureChart\";\n//https://power.larc.nasa.gov/api/temporal/daily/point?parameters=ALLSKY_KT,ALLSKY_NKT,ALLSKY_SFC_LW_DWN,ALLSKY_SFC_UVA,ALLSKY_SFC_UVB,ALLSKY_SFC_UV_INDEX,CLRSKY_SFC_SW_DWN,ALLSKY_SFC_SW_DWN&community=RE&longitude=10.0000&latitude=-6.0000&start=20210101&end=20210331&format=JSON\n\n// const lineChartData = [\n//   {\n//     name: \"Page A\",\n//     uv: 4000,\n//     pv: 2400,\n//     amt: 2400,\n//   },\n//   {\n//     name: \"Page B\",\n//     uv: 3000,\n//     pv: 1398,\n//     amt: 2210,\n//   },\n//   {\n//     name: \"Page C\",\n//     uv: 2000,\n//     pv: 9800,\n//     amt: 2290,\n//   },\n//   {\n//     name: \"Page D\",\n//     uv: 2780,\n//     pv: 3908,\n//     amt: 2000,\n//   },\n//   {\n//     name: \"Page E\",\n//     uv: 1890,\n//     pv: 4800,\n//     amt: 2181,\n//   },\n//   {\n//     name: \"Page F\",\n//     uv: 2390,\n//     pv: 3800,\n//     amt: 2500,\n//   },\n//   {\n//     name: \"Page G\",\n//     uv: 3490,\n//     pv: 4300,\n//     amt: 2100,\n//   },\n// ];\n\nconst pieChartData = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n];\n\n\n\nexport default function Charts(props) {\n  const [lineChartdata, setlineChartdata] = useState([]);\n\n  var theme = useTheme();\n\n  const getlineChartData = () => {\n\n    let TempData_x =[];\n        let TimeData_x =[];\n        let TempData_y =[];\n        let TimeData_y =[];\n\n    axios.get('//https://power.larc.nasa.gov/api/temporal/daily/point?parameters=ALLSKY_KT,ALLSKY_NKT,ALLSKY_SFC_LW_DWN,ALLSKY_SFC_UVA,ALLSKY_SFC_UVB,ALLSKY_SFC_UV_INDEX,CLRSKY_SFC_SW_DWN,ALLSKY_SFC_SW_DWN&community=RE&longitude=10.0000&latitude=-6.0000&start=20210101&end=20210331&format=JSON')\n    // fetch('http://localhost:9092/masterData/allData')\n      .then(response => {\n        console.log( response.data);\n        setlineChartdata (response.properties.ALLSKY_KT);\n      })\n      .catch((error) =>{\n          console.log(error);\n      })\n  }\n  // local\n  var [activeIndex, setActiveIndexId] = useState(0);\n\n  return (\n    <>\n      <PageTitle title=\"Charts Page - Data Display\" button={\n        <Button\n          variant=\"contained\"\n          size=\"medium\"\n          color=\"secondary\"\n        >\n          Latest Reports\n        </Button>\n      } />\n      <Grid container spacing={4}>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Apex Line Chart\" upperTitle noBodyPadding>\n            <ApexLineChart />\n            <TemperatureChart/>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Widget title=\"Apex Heatmap\" upperTitle noBodyPadding>\n            <ApexHeatmap />\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Widget title=\"Simple Line Chart\" noBodyPadding upperTitle>\n            <ResponsiveContainer width=\"100%\" height={350}>\n              <LineChart\n                width={500}\n                height={300}\n                data={getlineChartData}\n                margin={{\n                  top: 5,\n                  right: 30,\n                  left: 20,\n                  bottom: 5,\n                }}\n              >\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                {/* <XAxis dataKey=\"name\" /> */}\n                <XAxis dataKey=\"name\" />\n                <YAxis />\n                <Tooltip />\n                <Legend />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"pv\"\n                  stroke={theme.palette.primary.main}\n                  activeDot={{ r: 8 }}\n                />\n                <Line\n                  type=\"monotone\"\n                  dataKey=\"uv\"\n                  stroke={theme.palette.secondary.main}\n                />\n              </LineChart>\n              \n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Widget title=\"Pie Chart with Tooltips\" noBodyPadding upperTitle>\n            <ResponsiveContainer width=\"100%\" height={300}>\n              <PieChart width={200} height={300}>\n                <Pie\n                  activeIndex={activeIndex}\n                  activeShape={renderActiveShape}\n                  data={pieChartData}\n                  innerRadius={60}\n                  outerRadius={80}\n                  fill={theme.palette.primary.main}\n                  dataKey=\"value\"\n                  onMouseEnter={(e, id) => setActiveIndexId(id)}\n                />\n              </PieChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n      </Grid>\n    </>\n  );\n}\n\n// ################################################################\n\nfunction renderActiveShape(props) {\n  var RADIAN = Math.PI / 180;\n  var {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    percent,\n    value,\n  } = props;\n  var sin = Math.sin(-RADIAN * midAngle);\n  var cos = Math.cos(-RADIAN * midAngle);\n  var sx = cx + (outerRadius + 10) * cos;\n  var sy = cy + (outerRadius + 10) * sin;\n  var mx = cx + (outerRadius + 30) * cos;\n  var my = cy + (outerRadius + 30) * sin;\n  var ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  var ey = my;\n  var textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`PV ${value}`}</text>\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        dy={18}\n        textAnchor={textAnchor}\n        fill=\"#999\"\n      >\n        {`(Rate ${(percent * 100).toFixed(2)}%)`}\n      </text>\n    </g>\n  );\n}\n","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\PageTitle\\PageTitle.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\charts\\components\\ApexHeatmap.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\charts\\components\\ApexLineChart.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\PageTitle\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Widget\\Widget.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\login\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\error\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Wrappers\\Wrappers.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Layout\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Widget\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\tables\\Tables.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\maps\\Maps.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\typography\\Typography.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\notifications\\Notifications.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\Dashboard.js",["205"],"import React, { useState } from \"react\";\nimport {\n  Grid,\n  LinearProgress,\n  Select,\n  OutlinedInput,\n  MenuItem,\n  Button\n} from \"@material-ui/core\";\nimport { useTheme } from \"@material-ui/styles\";\nimport {\n  ResponsiveContainer,\n  ComposedChart,\n  AreaChart,\n  LineChart,\n  Line,\n  Area,\n  PieChart,\n  Pie,\n  Cell,\n  YAxis,\n  XAxis,\n} from \"recharts\";\n\n// styles\nimport useStyles from \"./styles\";\n\n// components\nimport mock from \"./mock\";\nimport Widget from \"../../components/Widget\";\nimport PageTitle from \"../../components/PageTitle\";\nimport { Typography } from \"../../components/Wrappers\";\nimport Dot from \"../../components/Sidebar/components/Dot\";\nimport Table from \"./components/Table/Table\";\nimport BigStat from \"./components/BigStat/BigStat\";\n\nconst mainChartData = getMainChartData();\nconst PieChartData = [\n  { name: \"Group A\", value: 400, color: \"primary\" },\n  { name: \"Group B\", value: 300, color: \"secondary\" },\n  { name: \"Group C\", value: 300, color: \"warning\" },\n  { name: \"Group D\", value: 200, color: \"success\" },\n];\n\nexport default function Dashboard(props) {\n  var classes = useStyles();\n  var theme = useTheme();\n\n  // local\n  var [mainChartState, setMainChartState] = useState(\"monthly\");\n\n  return (\n    <>\n      <PageTitle title=\"Dashboard\" button={<Button\n      variant=\"contained\"\n      size=\"medium\"\n      color=\"secondary\"\n    >\n        Latest Reports\n    </Button>} />\n      <Grid container spacing={4}>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget\n            title=\"Sunshine Today\"\n            upperTitle\n            bodyClass={classes.fullHeightBody}\n            className={classes.card}\n          >\n            <div className={classes.visitsNumberContainer}>\n              <Grid container item alignItems={\"center\"}>\n                <Grid item xs={6}>\n              <Typography size=\"xl\" weight=\"medium\" noWrap>\n                12, 678\n              </Typography>\n                </Grid>\n                <Grid item xs={6}>\n              <LineChart\n                width={100}\n                height={30}\n                data={[\n                  { value: 10 },\n                  { value: 15 },\n                  { value: 10 },\n                  { value: 17 },\n                  { value: 18 },\n                ]}\n              >\n                <Line\n                  type=\"natural\"\n                  dataKey=\"value\"\n                  stroke={theme.palette.success.main}\n                  strokeWidth={2}\n                  dot={false}\n                />\n              </LineChart>\n                </Grid>\n              </Grid>\n            </div>\n            <Grid\n              container\n              direction=\"row\"\n              justify=\"space-between\"\n              alignItems=\"center\"\n            >\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Maximum Power\n                </Typography>\n                <Typography size=\"md\">860</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Generated\n                </Typography>\n                <Typography size=\"md\">32</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color=\"text\" colorBrightness=\"secondary\" noWrap>\n                  Rate\n                </Typography>\n                <Typography size=\"md\">3.25%</Typography>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Performance\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.performanceLegendWrapper}>\n              <div className={classes.legendElement}>\n                <Dot color=\"warning\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >\n                  Generating\n                </Typography>\n              </div>\n              <div className={classes.legendElement}>\n                <Dot color=\"primary\" />\n                <Typography\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                  className={classes.legendElementText}\n                >Available\n                  \n                </Typography>\n              </div>\n            </div>\n            <div className={classes.progressSection}>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Available\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={77}\n                classes={{ barColorPrimary: classes.progressBarPrimary }}\n                className={classes.progress}\n              />\n            </div>\n            <div>\n              <Typography\n                size=\"md\"\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.progressSectionTitle}\n              >\n                Generating\n              </Typography>\n              <LinearProgress\n                variant=\"determinate\"\n                value={73}\n                classes={{ barColorPrimary: classes.progressBarWarning }}\n                className={classes.progress}\n              />\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={8} sm={6} xs={12}>\n          <Widget\n            title=\"Temperature Overview\"\n            upperTitle\n            className={classes.card}\n            bodyClass={classes.fullHeightBody}\n          >\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                60% / 37°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.secondary.main}\n                      fill={theme.palette.secondary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                54% / 31°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.primary.main}\n                      fill={theme.palette.primary.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n            <div className={classes.serverOverviewElement}>\n              <Typography\n                color=\"text\"\n                colorBrightness=\"secondary\"\n                className={classes.serverOverviewElementText}\n                noWrap\n              >\n                57% / 21°С / 3.3 Ghz\n              </Typography>\n              <div className={classes.serverOverviewElementChartWrapper}>\n                <ResponsiveContainer height={50} width=\"99%\">\n                  <AreaChart data={getRandomData(10)}>\n                    <Area\n                      type=\"natural\"\n                      dataKey=\"value\"\n                      stroke={theme.palette.warning.main}\n                      fill={theme.palette.warning.light}\n                      strokeWidth={2}\n                      fillOpacity=\"0.25\"\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              </div>\n            </div>\n          </Widget>\n        </Grid>\n        <Grid item lg={3} md={4} sm={6} xs={12}>\n          <Widget title=\"Energy Consumption\" upperTitle className={classes.card}>\n            <Grid container spacing={2}>\n              <Grid item xs={6}>\n                <ResponsiveContainer width=\"100%\" height={144}>\n                  <PieChart>\n                    <Pie\n                      data={PieChartData}\n                      innerRadius={30}\n                      outerRadius={40}\n                      dataKey=\"value\"\n                    >\n                      {PieChartData.map((entry, index) => (\n                        <Cell\n                          key={`cell-${index}`}\n                          fill={theme.palette[entry.color].main}\n                        />\n                      ))}\n                    </Pie>\n                  </PieChart>\n                </ResponsiveContainer>\n              </Grid>\n              <Grid item xs={6}>\n                <div className={classes.pieChartLegendWrapper}>\n                  {PieChartData.map(({ name, value, color }, index) => (\n                    <div key={color} className={classes.legendItemContainer}>\n                      <Dot color={color} />\n                      <Typography style={{ whiteSpace: \"nowrap\", fontSize: 12 }} >\n                        &nbsp;{name}&nbsp;\n                      </Typography>\n                      <Typography color=\"text\" colorBrightness=\"secondary\">\n                        &nbsp;{value}\n                      </Typography>\n                    </div>\n                  ))}\n                </div>\n              </Grid>\n            </Grid>\n          </Widget>\n        </Grid>\n        <Grid item xs={12}>\n          <Widget\n            bodyClass={classes.mainChartBody}\n            header={\n              <div className={classes.mainChartHeader}>\n                <Typography\n                  variant=\"h5\"\n                  color=\"text\"\n                  colorBrightness=\"secondary\"\n                >\n                  Daily Line Chart\n                </Typography>\n                <div className={classes.mainChartHeaderLabels}>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"warning\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Tablet\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"primary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Mobile\n                    </Typography>\n                  </div>\n                  <div className={classes.mainChartHeaderLabel}>\n                    <Dot color=\"secondary\" />\n                    <Typography className={classes.mainChartLegentElement}>\n                      Desktop\n                    </Typography>\n                  </div>\n                </div>\n                <Select\n                  value={mainChartState}\n                  onChange={e => setMainChartState(e.target.value)}\n                  input={\n                    <OutlinedInput\n                      labelWidth={0}\n                      classes={{\n                        notchedOutline: classes.mainChartSelectRoot,\n                        input: classes.mainChartSelect,\n                      }}\n                    />\n                  }\n                  autoWidth\n                >\n                  <MenuItem value=\"daily\">Daily</MenuItem>\n                  <MenuItem value=\"weekly\">Weekly</MenuItem>\n                  <MenuItem value=\"monthly\">Monthly</MenuItem>\n                </Select>\n              </div>\n            }\n          >\n            <ResponsiveContainer width=\"100%\" minWidth={500} height={350}>\n              <ComposedChart\n                margin={{ top: 0, right: -15, left: -15, bottom: 0 }}\n                data={mainChartData}\n              >\n                <YAxis\n                  ticks={[0, 2500, 5000, 7500]}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <XAxis\n                  tickFormatter={i => i + 1}\n                  tick={{ fill: theme.palette.text.hint + \"80\", fontSize: 14 }}\n                  stroke={theme.palette.text.hint + \"80\"}\n                  tickLine={false}\n                />\n                <Area\n                  type=\"natural\"\n                  dataKey=\"desktop\"\n                  fill={theme.palette.background.light}\n                  strokeWidth={0}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"natural\"\n                  dataKey=\"mobile\"\n                  stroke={theme.palette.primary.main}\n                  strokeWidth={2}\n                  dot={false}\n                  activeDot={false}\n                />\n                <Line\n                  type=\"linear\"\n                  dataKey=\"tablet\"\n                  stroke={theme.palette.warning.main}\n                  strokeWidth={2}\n                  dot={{\n                    stroke: theme.palette.warning.dark,\n                    strokeWidth: 2,\n                    fill: theme.palette.warning.main,\n                  }}\n                />\n              </ComposedChart>\n            </ResponsiveContainer>\n          </Widget>\n        </Grid>\n        {mock.bigStat.map(stat => (\n          <Grid item md={4} sm={6} xs={12} key={stat.product}>\n            <BigStat {...stat} />\n          </Grid>\n        ))}\n        {/* <Grid item xs={12}>\n          <Widget\n            title=\"\"\n            upperTitle\n            noBodyPadding\n            bodyClass={classes.tableWidget}\n          >\n            <Table data={mock.table} />\n          </Widget>\n        </Grid> */}\n      </Grid>\n    </>\n  );\n}\n\n// #######################################################################\nfunction getRandomData(length, min, max, multiplier = 10, maxDiff = 10) {\n  var array = new Array(length).fill();\n  let lastValue;\n\n  return array.map((item, index) => {\n    let randomValue = Math.floor(Math.random() * multiplier + 1);\n\n    while (\n      randomValue <= min ||\n      randomValue >= max ||\n      (lastValue && randomValue - lastValue > maxDiff)\n    ) {\n      randomValue = Math.floor(Math.random() * multiplier + 1);\n    }\n\n    lastValue = randomValue;\n\n    return { value: randomValue };\n  });\n}\n\nfunction getMainChartData() {\n  var resultArray = [];\n  var tablet = getRandomData(31, 3500, 6500, 7500, 1000);\n  var desktop = getRandomData(31, 1500, 7500, 7500, 1500);\n  var mobile = getRandomData(31, 1500, 7500, 7500, 1500);\n\n  for (let i = 0; i < tablet.length; i++) {\n    resultArray.push({\n      tablet: tablet[i].value,\n      desktop: desktop[i].value,\n      mobile: mobile[i].value,\n    });\n  }\n\n  return resultArray;\n}\n","C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Sidebar\\Sidebar.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Header\\Header.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\maps\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\notifications\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Sidebar\\components\\Dot.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\components\\Table\\Table.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\components\\BigStat\\BigStat.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Header\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Sidebar\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\mock.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Sidebar\\components\\SidebarLink\\SidebarLink.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Notification\\Notification.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\UserAvatar\\UserAvatar.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\icons\\Icons.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\dashboard\\components\\BigStat\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Sidebar\\components\\SidebarLink\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\Notification\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\icons\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\components\\UserAvatar\\styles.js",[],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\typography\\styles.js",["206","207"],"C:\\Users\\Nirasha\\Documents\\GitHub\\react-material-admin-master\\src\\pages\\charts\\components\\temperatureChart.js",["208","209","210","211","212","213","214"],"import React,{ useState,useEffect } from 'react';\r\nimport{Bar,Line, Pie} from 'react-chartjs-2';\r\n// import ApexCharts from \"react-apexcharts\";\r\n\r\nimport axios from 'axios';\r\n\r\nconst TempRecord = props => (\r\n    <tr>        \r\n        <td>{props.TempRecord.sensor_id}</td>\r\n        <td>{props.TempRecord.date}</td>\r\n        <td>{props.TempRecord.data_value}</td>\r\n    </tr>\r\n)\r\n\r\nconst TemperatureChart =()=>{\r\n    \r\n    var[chartData, setChartData] = useState({});\r\n    const[temperatureData, setTemperatureData] = useState([]);\r\n    const[timeSeriesData, setTimeData] = useState([]);\r\n    \r\n\r\n    const Chart =()=>{\r\n        let TempData_x =[];\r\n        let TimeData_x =[];\r\n        let TempData_y =[];\r\n        let TimeData_y =[];\r\n        axios.get(\"http://localhost:8080/tempreadings/\")\r\n        .then(response => {\r\n            console.log(response) \r\n            \r\n            //  for (const dataObj of response.data.data){\r\n            for (const dataObj of response.data){\r\n                if(dataObj.sensor_id === \"xxxx\"){\r\n                    console.log(dataObj.sensor_id)\r\n                    TempData_x.push(parseFloat(dataObj.data_value))\r\n                    TimeData_x.push(parseFloat(dataObj.date)) \r\n                }\r\n                else if (dataObj.sensor_id === 'yyyy'){\r\n                    TempData_y.push(parseFloat(dataObj.data_value))\r\n                    TimeData_y.push(parseFloat(dataObj.date))\r\n                }\r\n            }\r\n            setChartData({\r\n                // chartData :{\r\n                    labels:TimeData_x,\r\n                    datasets: [{\r\n                        label: 'Temperature data XXXX',\r\n                        data: TempData_x,\r\n                        fill: false,\r\n                        borderColor: 'rgb(75, 192, 192)',\r\n                        tension: 0.1,\r\n                        display : true,\r\n                    },\r\n                    {\r\n                        label: 'Temperature data YYYY',\r\n                        data: TempData_y,\r\n                        fill: false,\r\n                        borderColor: 'rgb(75, 55, 192)',\r\n                        tension: 0.1,\r\n                        display : true,\r\n                    }]\r\n                    \r\n            });\r\n        })\r\n        .catch((error) =>{\r\n            console.log(error);\r\n        })\r\n        console.log(TempData_x, TimeData_x)\r\n\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        Chart();\r\n        console.log(\"chart\")\r\n    },[]);\r\n\r\n     return(\r\n        <div className=\"chart\">\r\n            <div className =\"TemperatureChart\" >\r\n            <Line\r\n                // data={this.state.chartData}\r\n                data ={chartData}\r\n                options = {{\r\n                    title :{\r\n                        display: true,\r\n                        text:'Temperature Variation',\r\n                        fontSize : 25,\r\n            \r\n                    },\r\n                    legend :{\r\n                        // display: this.props.displayLegend,\r\n                        // position : this.props.legendPosition,\r\n                        display: true,\r\n                        position : true,\r\n                    },\r\n                    responsive: true,\r\n                    // maintainAspectRatio: false\r\n                }}\r\n            />\r\n            \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TemperatureChart;",{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":82,"column":10,"nodeType":"221","messageId":"222","endLine":82,"endColumn":23},{"ruleId":"219","severity":1,"message":"223","line":88,"column":9,"nodeType":"221","messageId":"222","endLine":88,"endColumn":19},{"ruleId":"219","severity":1,"message":"224","line":89,"column":13,"nodeType":"221","messageId":"222","endLine":89,"endColumn":23},{"ruleId":"219","severity":1,"message":"225","line":90,"column":13,"nodeType":"221","messageId":"222","endLine":90,"endColumn":23},{"ruleId":"219","severity":1,"message":"226","line":91,"column":13,"nodeType":"221","messageId":"222","endLine":91,"endColumn":23},{"ruleId":"219","severity":1,"message":"227","line":34,"column":8,"nodeType":"221","messageId":"222","endLine":34,"endColumn":13},{"ruleId":"219","severity":1,"message":"228","line":3,"column":7,"nodeType":"221","messageId":"222","endLine":3,"endColumn":12},{"ruleId":"229","severity":2,"message":"230","line":3,"column":15,"nodeType":"221","messageId":"231","endLine":3,"endColumn":26},{"ruleId":"219","severity":1,"message":"232","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":11},{"ruleId":"219","severity":1,"message":"233","line":2,"column":18,"nodeType":"221","messageId":"222","endLine":2,"endColumn":21},{"ruleId":"219","severity":1,"message":"234","line":7,"column":7,"nodeType":"221","messageId":"222","endLine":7,"endColumn":17},{"ruleId":"219","severity":1,"message":"235","line":18,"column":11,"nodeType":"221","messageId":"222","endLine":18,"endColumn":26},{"ruleId":"219","severity":1,"message":"236","line":18,"column":28,"nodeType":"221","messageId":"222","endLine":18,"endColumn":46},{"ruleId":"219","severity":1,"message":"237","line":19,"column":11,"nodeType":"221","messageId":"222","endLine":19,"endColumn":25},{"ruleId":"219","severity":1,"message":"238","line":19,"column":27,"nodeType":"221","messageId":"222","endLine":19,"endColumn":38},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"no-unused-vars","'lineChartdata' is assigned a value but never used.","Identifier","unusedVar","'TempData_x' is assigned a value but never used.","'TimeData_x' is assigned a value but never used.","'TempData_y' is assigned a value but never used.","'TimeData_y' is assigned a value but never used.","'Table' is defined but never used.","'theme' is assigned a value but never used.","no-undef","'createTheme' is not defined.","undef","'Bar' is defined but never used.","'Pie' is defined but never used.","'TempRecord' is assigned a value but never used.","'temperatureData' is assigned a value but never used.","'setTemperatureData' is assigned a value but never used.","'timeSeriesData' is assigned a value but never used.","'setTimeData' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]